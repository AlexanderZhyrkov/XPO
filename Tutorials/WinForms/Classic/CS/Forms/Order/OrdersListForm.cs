using DevExpress.Data;
using DevExpress.Xpo;
using DevExpress.XtraBars;
using DevExpress.XtraGrid;
using DevExpress.XtraGrid.Views.Base;
using System;
using System.Windows.Forms;
using XpoTutorial;

namespace WinFormsApplication.Forms {
    public partial class OrdersListForm : DevExpress.XtraBars.Ribbon.RibbonForm {
        public OrdersListForm() {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            this.xpInstantFeedbackSource1.ResolveSession += xpInstantFeedbackSource1_ResolveSession;
            // This line of code is generated by Data Source Configuration Wizard
            this.xpInstantFeedbackSource1.DismissSession += xpInstantFeedbackSource1_DismissSession;
        }

        private void Reload() {
            OrdersDataGrid.DataSource = new XPInstantFeedbackSource(typeof(Order), "Oid;ProductName;OrderDate;Freight;", null, 
                e => xpInstantFeedbackSource1_ResolveSession(null, e), 
                e => xpInstantFeedbackSource1_DismissSession(null, e));
        }

        private void OrdersView_FocusedRowObjectChanged(object sender, FocusedRowObjectChangedEventArgs e) {
            btnEdit.Enabled = btnDelete.Enabled = e.Row != null;
        }

        private void btnNew_ItemClick(object sender, ItemClickEventArgs e) {
            EditOrderForm form = new EditOrderForm();
            form.MdiParent = this.MdiParent;
            form.WindowState = FormWindowState.Maximized;
            form.Show();
            form.FormClosing += EditForm_FormClosing;
        }

        private void btnEdit_ItemClick(object sender, ItemClickEventArgs e) {
            EditOrderForm form = new EditOrderForm();
            form.OrderId = (int)OrdersView.GetFocusedRowCellValue("Oid");
            form.WindowState = FormWindowState.Maximized;
            form.MdiParent = this.MdiParent;
            form.Show();
            form.FormClosing += EditForm_FormClosing;
        }

        private void btnDelete_ItemClick(object sender, ItemClickEventArgs e) {
        }

        private void btnRefresh_ItemClick(object sender, ItemClickEventArgs e) {
            Reload();
        }

        private void EditForm_FormClosing(object sender, FormClosingEventArgs e) {
            EditOrderForm form = (EditOrderForm)sender;
            Reload();
            int rowHandle = OrdersView.LocateByValue("Oid", form.OrderId, new OperationCompleted(rh => SetFocusedRow((int)rh)));
            if (rowHandle != GridControl.InvalidRowHandle)
                SetFocusedRow(rowHandle);
        }

        private void SetFocusedRow(int rowHandle) {
            OrdersView.FocusedRowHandle = rowHandle;
        }

        // This event is generated by Data Source Configuration Wizard
        void xpInstantFeedbackSource1_ResolveSession(object sender, ResolveSessionEventArgs e) {

            // Assign a session to the Session property,
            e.Session = new DevExpress.Xpo.UnitOfWork();
        }

        // This event is generated by Data Source Configuration Wizard
        void xpInstantFeedbackSource1_DismissSession(object sender, ResolveSessionEventArgs e) {

            // Here you can dismiss the session instance you have assigned to the ResolveSessionEventArgs.Session property in the ResolveSession event handler.
            IDisposable session = e.Session as IDisposable;
            if (session != null)
                session.Dispose();
        }
    }
}
